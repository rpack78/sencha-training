3.1.7 (Brainy Betty)
77c479240b27e28f77813fb2a5017cc40bf3e30c
o:Sass::Tree::RootNode
:@template"¤ @import "shared";

// CSS Transitions
// Currently only works in Webkit.
//
// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
// * We'll be prepared.
//
// Including this submodule sets following defaults for the mixins:
//
//     $default-transition-property : all
//     $default-transition-duration : 1s
//     $default-transition-function : false
//     $default-transition-delay    : false
//
// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).

$default-transition-property: all !default;

$default-transition-duration: 1s !default;

$default-transition-function: false !default;

$default-transition-delay: false !default;

$transitionable-prefixed-values: transform, transform-origin !default;

// One or more properties to transition
//
// * for multiple, use a comma-delimited list
// * also accepts "all" or "none"

@mixin transition-property($property-1: $default-transition-property,
  $property-2 : false,
  $property-3 : false,
  $property-4 : false,
  $property-5 : false,
  $property-6 : false,
  $property-7 : false,
  $property-8 : false,
  $property-9 : false,
  $property-10: false
) {
  @if type-of($property-1) == string { $property-1: unquote($property-1); }
  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);
  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }
  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }
  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }
                                                          transition-property : $properties;
}

// One or more durations in seconds
//
// * for multiple, use a comma-delimited list
// * these durations will affect the properties in the same list position

@mixin transition-duration($duration-1: $default-transition-duration,
  $duration-2 : false,
  $duration-3 : false,
  $duration-4 : false,
  $duration-5 : false,
  $duration-6 : false,
  $duration-7 : false,
  $duration-8 : false,
  $duration-9 : false,
  $duration-10: false
) {
  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }
  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);
  @include experimental(transition-duration, $durations,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more timing functions
//
// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
// * For multiple, use a comma-delimited list
// * These functions will effect the properties in the same list position

@mixin transition-timing-function($function-1: $default-transition-function,
  $function-2 : false,
  $function-3 : false,
  $function-4 : false,
  $function-5 : false,
  $function-6 : false,
  $function-7 : false,
  $function-8 : false,
  $function-9 : false,
  $function-10: false
) {
  $function-1: unquote($function-1);
  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);
  @include experimental(transition-timing-function, $functions,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more transition-delays in seconds
//
// * for multiple, use a comma-delimited list
// * these delays will effect the properties in the same list position

@mixin transition-delay($delay-1: $default-transition-delay,
  $delay-2 : false,
  $delay-3 : false,
  $delay-4 : false,
  $delay-5 : false,
  $delay-6 : false,
  $delay-7 : false,
  $delay-8 : false,
  $delay-9 : false,
  $delay-10: false
) {
  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }
  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);
  @include experimental(transition-delay, $delays,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// Transition all-in-one shorthand

@mixin single-transition(
  $property: $default-transition-property,
  $duration: $default-transition-duration,
  $function: $default-transition-function,
  $delay: $default-transition-delay
) {
  @include transition(compact($property $duration $function $delay));
}

@mixin transition(
  $transition-1 : default,
  $transition-2 : false,
  $transition-3 : false,
  $transition-4 : false,
  $transition-5 : false,
  $transition-6 : false,
  $transition-7 : false,
  $transition-8 : false,
  $transition-9 : false,
  $transition-10: false
) {
  @if $transition-1 == default {
    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);
  }
  $transitions: false;
  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {
    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);
  } @else {
    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);
  }
  $delays: comma-list();
  $has-delays: false;
  $webkit-value: comma-list();
  $moz-value: comma-list();
  $o-value: comma-list();

  // This block can be made considerably simpler at the point in time that
  // we no longer need to deal with the differences in how delays are treated.
  @each $transition in $transitions {
    // Extract the values from the list
    // (this would be cleaner if nth took a 3rd argument to provide a default value).
    $property: nth($transition, 1);
    $duration: false;
    $timing-function: false;
    $delay: false;
    @if length($transition) > 1 { $duration:        nth($transition, 2); }
    @if length($transition) > 2 { $timing-function: nth($transition, 3); }
    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }

    // If a delay is provided without a timing function
    @if is-time($timing-function) and not $delay { $delay: $timing-function; $timing-function: false; $has-delays: true; }

    // Keep a list of delays in case one is specified
    $delays: append($delays, if($delay, $delay, 0s));

    $webkit-value: append($webkit-value, compact(prefixed-for-transition(-webkit, $property) $duration $timing-function));
       $moz-value: append(   $moz-value, compact(prefixed-for-transition(   -moz, $property) $duration $timing-function $delay));
         $o-value: append(     $o-value, compact(prefixed-for-transition(     -o, $property) $duration $timing-function $delay));
  }

  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;
    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.
    @if $has-delays                       { -webkit-transition-delay : $delays;       } }
  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }
  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }
                                                          transition : $transitions;
}

// coerce a list to be comma delimited or make a new, empty comma delimited list.
@function comma-list($list: ()) {
  @return join((), $list, comma);
}

// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.
@function prefixed-for-transition($prefix, $property) {
  @if type-of($property) == list {
    $new-list: comma-list();
    @each $v in $property {
      $new-list: append($new-list, prefixed-for-transition($prefix, $v));
    }
    @return $new-list;
  } @else {
    @if index($transitionable-prefixed-values, $property) {
      @return #{$prefix}-#{$property};
    } @else {
      @return $property;
    }
  }
}

// Checks if the value given is a unit of time.
@function is-time($value) {
  @if type-of($value) == number {
    @return not not index(s ms, unit($value));
  } @else {
    @return false;
  }
}
:@children[o:Sass::Tree::ImportNode
;0;[ :@options{ :
@linei:@imported_filename"sharedo:Sass::Tree::CommentNode:
@loud0;[ ;	@
:@value"ï/* CSS Transitions
 * Currently only works in Webkit.
 *
 * * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
 * * We'll be prepared.
 *
 * Including this submodule sets following defaults for the mixins:
 *
 *     $default-transition-property : all
 *     $default-transition-duration : 1s
 *     $default-transition-function : false
 *     $default-transition-delay    : false
 *
 * Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s). */:@silenti ;
i:@lines[ o:Sass::Tree::VariableNode:
@name" default-transition-property;[ :@guarded"!default;	@
;
i:
@expro:Sass::Script::String	:
@type:identifier;	@
;"all;
io;;" default-transition-duration;[ ;"!default;	@
;
i;o:Sass::Script::Number:@denominator_units[ :@numerator_units["s;	@
;i:@original"1s;
io;;" default-transition-function;[ ;"!default;	@
;
i;o:Sass::Script::Bool;	@
;F;
io;;"default-transition-delay;[ ;"!default;	@
;
i;o;;	@
;F;
io;;"#transitionable-prefixed-values;[ ;"!default;	@
;
i;o:Sass::Script::List	:@separator:
comma;	@
;[o;	;;;	@
;"transform;
io;	;;;	@
;"transform-origin;
i;
io;;0;[ ;	@
;"}/* One or more properties to transition
 *
 * * for multiple, use a comma-delimited list
 * * also accepts "all" or "none" */;i ;
i!;[ o:Sass::Tree::MixinDefNode:
@args[[o:Sass::Script::Variable;"property-1:@underscored_name"property_1;	{ o;"	;" default-transition-property;#" default_transition_property;	@=;
i&[o;";"property-2;#"property_2;	@=o;;	@=;F;
i'[o;";"property-3;#"property_3;	@=o;;	@=;F;
i([o;";"property-4;#"property_4;	@=o;;	@=;F;
i)[o;";"property-5;#"property_5;	@=o;;	@=;F;
i*[o;";"property-6;#"property_6;	@=o;;	@=;F;
i+[o;";"property-7;#"property_7;	@=o;;	@=;F;
i,[o;";"property-8;#"property_8;	@=o;;	@=;F;
i-[o;";"property-9;#"property_9;	@=o;;	@=;F;
i.[o;";"property-10;#"property_10;	@=o;;	@=;F;
i/;"transition-property;[u:Sass::Tree::IfNodeÍ[o:Sass::Script::Operation
:@options{ :
@linei1:@operand2o:Sass::Script::String	:
@type:identifier;@:@value"string;i1:@operator:eq:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:
@name"property-1:@underscored_name"property_1;@;i1;"type-of;@;i1:@keywords{ 0[o:Sass::Tree::VariableNode;"property-1:@children[ :@guarded0;@;i1:
@expro;
;[o;	;"property-1;"property_1;@;i1;"unquote;@;i1;{ o;;"properties;[ ;0;	@
;
i2;o:Sass::Script::Funcall
;![o;"	;"property-1;#"property_1;	@
;
i2o;"	;"property-2;#"property_2;	@
;
i2o;"	;"property-3;#"property_3;	@
;
i2o;"	;"property-4;#"property_4;	@
;
i2o;"	;"property-5;#"property_5;	@
;
i2o;"	;"property-6;#"property_6;	@
;
i2o;"	;"property-7;#"property_7;	@
;
i2o;"	;"property-8;#"property_8;	@
;
i2o;"	;"property-9;#"property_9;	@
;
i2o;"	;"property-10;#"property_10;	@
;
i2;"compact;	@
;
i2:@keywords{ u;$¼[o:Sass::Script::Variable	:
@name"$experimental-support-for-webkit:@underscored_name"$experimental_support_for_webkit:@options{ :
@linei30[o:Sass::Tree::PropNode;[" -webkit-transition-property:@children[ :@prop_syntax:new:
@tabsi ;@	:@valueo:Sass::Script::Funcall
:
@args[o:Sass::Script::String	:
@type:identifier;@	;"-webkit;	i3o; 	;"properties;"properties;@	;	i3;"prefixed-for-transition;@	;	i3:@keywords{ ;	i3u;$¸[o:Sass::Script::Variable	:
@name"%experimental-support-for-mozilla:@underscored_name"%experimental_support_for_mozilla:@options{ :
@linei40[o:Sass::Tree::PropNode;["-moz-transition-property:@children[ :@prop_syntax:new:
@tabsi ;@	:@valueo:Sass::Script::Funcall
:
@args[o:Sass::Script::String	:
@type:identifier;@	;"	-moz;	i4o; 	;"properties;"properties;@	;	i4;"prefixed-for-transition;@	;	i4:@keywords{ ;	i4u;$°[o:Sass::Script::Variable	:
@name"#experimental-support-for-opera:@underscored_name"#experimental_support_for_opera:@options{ :
@linei50[o:Sass::Tree::PropNode;["-o-transition-property:@children[ :@prop_syntax:new:
@tabsi ;@	:@valueo:Sass::Script::Funcall
:
@args[o:Sass::Script::String	:
@type:identifier;@	;"-o;	i5o; 	;"properties;"properties;@	;	i5;"prefixed-for-transition;@	;	i5:@keywords{ ;	i5o:Sass::Tree::PropNode;["transition-property;[ :@prop_syntax:new:
@tabsi ;	@
;o;"	;"properties;#"properties;	@
;
i6;
i6;	@
;
i0:@has_childrenTo;;0;[ ;	@
;"¡/* One or more durations in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these durations will affect the properties in the same list position */;i ;
i9;[ o; ;![[o;";"duration-1;#"duration_1;	{ o;"	;" default-transition-duration;#" default_transition_duration;	@¥;
i>[o;";"duration-2;#"duration_2;	@¥o;;	@¥;F;
i?[o;";"duration-3;#"duration_3;	@¥o;;	@¥;F;
i@[o;";"duration-4;#"duration_4;	@¥o;;	@¥;F;
iA[o;";"duration-5;#"duration_5;	@¥o;;	@¥;F;
iB[o;";"duration-6;#"duration_6;	@¥o;;	@¥;F;
iC[o;";"duration-7;#"duration_7;	@¥o;;	@¥;F;
iD[o;";"duration-8;#"duration_8;	@¥o;;	@¥;F;
iE[o;";"duration-9;#"duration_9;	@¥o;;	@¥;F;
iF[o;";"duration-10;#"duration_10;	@¥o;;	@¥;F;
iG;"transition-duration;[u;$Í[o:Sass::Script::Operation
:@options{ :
@lineiI:@operand2o:Sass::Script::String	:
@type:identifier;@:@value"string;iI:@operator:eq:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:
@name"duration-1:@underscored_name"duration_1;@;iI;"type-of;@;iI:@keywords{ 0[o:Sass::Tree::VariableNode;"duration-1:@children[ :@guarded0;@;iI:
@expro;
;[o;	;"duration-1;"duration_1;@;iI;"unquote;@;iI;{ o;;"durations;[ ;0;	@
;
iJ;o;%
;![o;"	;"duration-1;#"duration_1;	@
;
iJo;"	;"duration-2;#"duration_2;	@
;
iJo;"	;"duration-3;#"duration_3;	@
;
iJo;"	;"duration-4;#"duration_4;	@
;
iJo;"	;"duration-5;#"duration_5;	@
;
iJo;"	;"duration-6;#"duration_6;	@
;
iJo;"	;"duration-7;#"duration_7;	@
;
iJo;"	;"duration-8;#"duration_8;	@
;
iJo;"	;"duration-9;#"duration_9;	@
;
iJo;"	;"duration-10;#"duration_10;	@
;
iJ;"compact;	@
;
iJ;&{ o:Sass::Tree::MixinNode;![o;	;;;	@
;"transition-duration;
iKo;"	;"durations;#"durations;	@
;
iKo;	;;;	@
;"	-moz;
iLo;	;;;	@
;"-webkit;
iLo;	;;;	@
;"-o;
iLo:!Sass::Script::UnaryOperation	;	@
;
iL:@operator:not:@operando;	;;;	@
;"-ms;
iLo;-	;	@
;
iL;.;/;0o;	;;;	@
;"-khtml;
iLo;	;;;	@
;"official;
iL;"experimental;[ ;	@
;
iM;&{ ;	@
;
iH;+To;;0;[ ;	@
;"õ/* One or more timing functions
 *
 * * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
 * * For multiple, use a comma-delimited list
 * * These functions will effect the properties in the same list position */;i ;
iP;[ o; ;![[o;";"function-1;#"function_1;	{ o;"	;" default-transition-function;#" default_transition_function;	@ ;
iV[o;";"function-2;#"function_2;	@ o;;	@ ;F;
iW[o;";"function-3;#"function_3;	@ o;;	@ ;F;
iX[o;";"function-4;#"function_4;	@ o;;	@ ;F;
iY[o;";"function-5;#"function_5;	@ o;;	@ ;F;
iZ[o;";"function-6;#"function_6;	@ o;;	@ ;F;
i[[o;";"function-7;#"function_7;	@ o;;	@ ;F;
i\[o;";"function-8;#"function_8;	@ o;;	@ ;F;
i][o;";"function-9;#"function_9;	@ o;;	@ ;F;
i^[o;";"function-10;#"function_10;	@ o;;	@ ;F;
i_;"transition-timing-function;[o;;"function-1;[ ;0;	@
;
ia;o;%
;![o;"	;"function-1;#"function_1;	@
;
ia;"unquote;	@
;
ia;&{ o;;"functions;[ ;0;	@
;
ib;o;%
;![o;"	;"function-1;#"function_1;	@
;
ibo;"	;"function-2;#"function_2;	@
;
ibo;"	;"function-3;#"function_3;	@
;
ibo;"	;"function-4;#"function_4;	@
;
ibo;"	;"function-5;#"function_5;	@
;
ibo;"	;"function-6;#"function_6;	@
;
ibo;"	;"function-7;#"function_7;	@
;
ibo;"	;"function-8;#"function_8;	@
;
ibo;"	;"function-9;#"function_9;	@
;
ibo;"	;"function-10;#"function_10;	@
;
ib;"compact;	@
;
ib;&{ o;,;![o;	;;;	@
;"transition-timing-function;
ico;"	;"functions;#"functions;	@
;
ico;	;;;	@
;"	-moz;
ido;	;;;	@
;"-webkit;
ido;	;;;	@
;"-o;
ido;-	;	@
;
id;.;/;0o;	;;;	@
;"-ms;
ido;-	;	@
;
id;.;/;0o;	;;;	@
;"-khtml;
ido;	;;;	@
;"official;
id;"experimental;[ ;	@
;
ie;&{ ;	@
;
i`;+To;;0;[ ;	@
;"¦/* One or more transition-delays in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these delays will effect the properties in the same list position */;i ;
ih;[ o; ;![[o;";"delay-1;#"delay_1;	{ o;"	;"default-transition-delay;#"default_transition_delay;	@¤;
im[o;";"delay-2;#"delay_2;	@¤o;;	@¤;F;
in[o;";"delay-3;#"delay_3;	@¤o;;	@¤;F;
io[o;";"delay-4;#"delay_4;	@¤o;;	@¤;F;
ip[o;";"delay-5;#"delay_5;	@¤o;;	@¤;F;
iq[o;";"delay-6;#"delay_6;	@¤o;;	@¤;F;
ir[o;";"delay-7;#"delay_7;	@¤o;;	@¤;F;
is[o;";"delay-8;#"delay_8;	@¤o;;	@¤;F;
it[o;";"delay-9;#"delay_9;	@¤o;;	@¤;F;
iu[o;";"delay-10;#"delay_10;	@¤o;;	@¤;F;
iv;"transition-delay;[u;$¾[o:Sass::Script::Operation
:@options{ :
@lineix:@operand2o:Sass::Script::String	:
@type:identifier;@:@value"string;ix:@operator:eq:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:
@name"delay-1:@underscored_name"delay_1;@;ix;"type-of;@;ix:@keywords{ 0[o:Sass::Tree::VariableNode;"delay-1:@children[ :@guarded0;@;ix:
@expro;
;[o;	;"delay-1;"delay_1;@;ix;"unquote;@;ix;{ o;;"delays;[ ;0;	@
;
iy;o;%
;![o;"	;"delay-1;#"delay_1;	@
;
iyo;"	;"delay-2;#"delay_2;	@
;
iyo;"	;"delay-3;#"delay_3;	@
;
iyo;"	;"delay-4;#"delay_4;	@
;
iyo;"	;"delay-5;#"delay_5;	@
;
iyo;"	;"delay-6;#"delay_6;	@
;
iyo;"	;"delay-7;#"delay_7;	@
;
iyo;"	;"delay-8;#"delay_8;	@
;
iyo;"	;"delay-9;#"delay_9;	@
;
iyo;"	;"delay-10;#"delay_10;	@
;
iy;"compact;	@
;
iy;&{ o;,;![o;	;;;	@
;"transition-delay;
izo;"	;"delays;#"delays;	@
;
izo;	;;;	@
;"	-moz;
i{o;	;;;	@
;"-webkit;
i{o;	;;;	@
;"-o;
i{o;-	;	@
;
i{;.;/;0o;	;;;	@
;"-ms;
i{o;-	;	@
;
i{;.;/;0o;	;;;	@
;"-khtml;
i{o;	;;;	@
;"official;
i{;"experimental;[ ;	@
;
i|;&{ ;	@
;
iw;+To;;0;[ ;	@
;"*/* Transition all-in-one shorthand */;i ;
i;[ o; ;![	[o;";"property;#"property;	{ o;"	;" default-transition-property;#" default_transition_property;	@;
i}[o;";"duration;#"duration;	@o;"	;" default-transition-duration;#" default_transition_duration;	@;
i~[o;";"function;#"function;	@o;"	;" default-transition-function;#" default_transition_function;	@;
i[o;";"
delay;#"
delay;	@o;"	;"default-transition-delay;#"default_transition_delay;	@;
i;"single-transition;[o;,;![o;%
;![o;	;:
space;	@
;[	o;"	;"property;#"property;	@
;
io;"	;"duration;#"duration;	@
;
io;"	;"function;#"function;	@
;
io;"	;"
delay;#"
delay;	@
;
i;
i;"compact;	@
;
i;&{ ;"transition;[ ;	@
;
i;&{ ;	@
;
i;+To; ;![[o;";"transition-1;#"transition_1;	{ o;	;;;	@W;"default;
i[o;";"transition-2;#"transition_2;	@Wo;;	@W;F;
i[o;";"transition-3;#"transition_3;	@Wo;;	@W;F;
i[o;";"transition-4;#"transition_4;	@Wo;;	@W;F;
i[o;";"transition-5;#"transition_5;	@Wo;;	@W;F;
i[o;";"transition-6;#"transition_6;	@Wo;;	@W;F;
i[o;";"transition-7;#"transition_7;	@Wo;;	@W;F;
i[o;";"transition-8;#"transition_8;	@Wo;;	@W;F;
i[o;";"transition-9;#"transition_9;	@Wo;;	@W;F;
i[o;";"transition-10;#"transition_10;	@Wo;;	@W;F;
i;"transition;[u;$î[o:Sass::Script::Operation
:@options{ :
@linei:@operand2o:Sass::Script::String	:
@type:identifier;@:@value"default;i:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"transition-1:@underscored_name"transition_1;@;i0[o:Sass::Tree::VariableNode;"transition-1:@children[ :@guarded0;@;i:
@expro:Sass::Script::Funcall
:
@args[o:Sass::Script::List	:@separator:
space;@;[	o;	;" default-transition-property;" default_transition_property;@;io;	;" default-transition-duration;" default_transition_duration;@;io;	;" default-transition-function;" default_transition_function;@;io;	;"default-transition-delay;"default_transition_delay;@;i;i;"compact;@;i:@keywords{ o;;"transitions;[ ;0;	@
;
i;o;;	@
;F;
iu;$g[o:Sass::Script::Operation
:@options{ :
@linei:@operand2o; 
;@;i;o:Sass::Script::String	:
@type:identifier;@:@value"	list;i:@operator:eq:@operand1o:Sass::Script::Funcall
:
@args[o;
;[o:Sass::Script::Variable	:
@name"transition-1:@underscored_name"transition_1;@;io:Sass::Script::Number:@denominator_units[ :@numerator_units[ ;@;i:@original"1;i;"nth;@;i:@keywords{ ;"type-of;@;i;{ ;:and;o; 
;@;i;o;		;
;;@;"	list;i;;;o;
;[o;	;"transition-1;"transition_1;@;i;"type-of;@;i;{ u:Sass::Tree::IfNode[00[o:Sass::Tree::VariableNode:
@name"transitions:@children[ :@guarded0:@options{ :
@linei:
@expro:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	;"transition-1:@underscored_name"transition_1;	@
;
io;	;"transition-2;"transition_2;	@
;
io;	;"transition-3;"transition_3;	@
;
io;	;"transition-4;"transition_4;	@
;
io;	;"transition-5;"transition_5;	@
;
io;	;"transition-6;"transition_6;	@
;
io;	;"transition-7;"transition_7;	@
;
io;	;"transition-8;"transition_8;	@
;
io;	;"transition-9;"transition_9;	@
;
io;	;"transition-10;"transition_10;	@
;
i;"compact;	@
;
i:@keywords{ [o:Sass::Tree::VariableNode;"transitions:@children[ :@guarded0;@;i:
@expro;
;[o;	;"transition-1;"transition_1;@;io;
;[o;	;"transition-2;"transition_2;@;io;	;"transition-3;"transition_3;@;io;	;"transition-4;"transition_4;@;io;	;"transition-5;"transition_5;@;io;	;"transition-6;"transition_6;@;io;	;"transition-7;"transition_7;@;io;	;"transition-8;"transition_8;@;io;	;"transition-9;"transition_9;@;io;	;"transition-10;"transition_10;@;i;"compact;@;i;{ o;		;
;;@;"
comma;i;"	join;@;i;{ o;;"delays;[ ;0;	@
;
i;o;%
;![ ;"comma-list;	@
;
i;&{ o;;"has-delays;[ ;0;	@
;
i;o;;	@
;F;
io;;"webkit-value;[ ;0;	@
;
i;o;%
;![ ;"comma-list;	@
;
i;&{ o;;"moz-value;[ ;0;	@
;
i;o;%
;![ ;"comma-list;	@
;
i;&{ o;;"o-value;[ ;0;	@
;
i;o;%
;![ ;"comma-list;	@
;
i;&{ o;;0;[ ;	@
;"/* This block can be made considerably simpler at the point in time that
 * we no longer need to deal with the differences in how delays are treated. */;i ;
i ;[ o:Sass::Tree::EachNode:	@var"transition;[o;;0;[ ;	@
;"}/* Extract the values from the list
 * (this would be cleaner if nth took a 3rd argument to provide a default value). */;i ;
i£;[ o;;"property;[ ;0;	@
;
i¥;o;%
;![o;"	;"transition;#"transition;	@
;
i¥o;;[ ;[ ;	@
;i;"1;
i¥;"nth;	@
;
i¥;&{ o;;"duration;[ ;0;	@
;
i¦;o;;	@
;F;
i¦o;;"timing-function;[ ;0;	@
;
i§;o;;	@
;F;
i§o;;"
delay;[ ;0;	@
;
i¨;o;;	@
;F;
i¨u;$
[o:Sass::Script::Operation
:@options{ :
@linei©:@operand2o:Sass::Script::Number:@denominator_units[ :@numerator_units[ ;@:@valuei:@original"1;i©:@operator:gt:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:
@name"transition:@underscored_name"transition;@;i©;"length;@;i©:@keywords{ 0[o:Sass::Tree::VariableNode;"duration:@children[ :@guarded0;@;i©:
@expro;
;[o;	;"transition;"transition;@;i©o;	;
@	;[ ;@;i;"2;i©;"nth;@;i©;{ u;$[o:Sass::Script::Operation
:@options{ :
@lineiª:@operand2o:Sass::Script::Number:@denominator_units[ :@numerator_units[ ;@:@valuei:@original"2;iª:@operator:gt:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:
@name"transition:@underscored_name"transition;@;iª;"length;@;iª:@keywords{ 0[o:Sass::Tree::VariableNode;"timing-function:@children[ :@guarded0;@;iª:
@expro;
;[o;	;"transition;"transition;@;iªo;	;
@	;[ ;@;i;"3;iª;"nth;@;iª;{ u;$M[o:Sass::Script::Operation
:@options{ :
@linei«:@operand2o:Sass::Script::Number:@denominator_units[ :@numerator_units[ ;@:@valuei:@original"3;i«:@operator:gt:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:
@name"transition:@underscored_name"transition;@;i«;"length;@;i«:@keywords{ 0[o:Sass::Tree::VariableNode;"
delay:@children[ :@guarded0;@;i«:
@expro;
;[o;	;"transition;"transition;@;i«o;	;
@	;[ ;@;i	;"4;i«;"nth;@;i«;{ o;;"has-delays;[ ;0;@;i«;o:Sass::Script::Bool;@;T;i«o;;0;[ ;	@
;";/* If a delay is provided without a timing function */;i ;
i­;[ u;$^[o:Sass::Script::Operation
:@options{ :
@linei®:@operand2o:!Sass::Script::UnaryOperation	;@;i®:@operator:not:@operando:Sass::Script::Variable	:
@name"
delay:@underscored_name"
delay;@;i®;
:and:@operand1o:Sass::Script::Funcall
:
@args[o;	;"timing-function;"timing_function;@;i®;"is-time;@;i®:@keywords{ 0[o:Sass::Tree::VariableNode;"
delay:@children[ :@guarded0;@;i®:
@expro;	;"timing-function;"timing_function;@;i®o;;"timing-function;[ ;0;@;i®;o:Sass::Script::Bool;@:@valueF;i®o;;"has-delays;[ ;0;@;i®;o;;@;T;i®o;;0;[ ;	@
;"9/* Keep a list of delays in case one is specified */;i ;
i°;[ o;;"delays;[ ;0;	@
;
i±;o;%
;![o;"	;"delays;#"delays;	@
;
i±o;%
;![o;"	;"
delay;#"
delay;	@
;
i±o;"	;"
delay;#"
delay;	@
;
i±o;;[ ;["s;	@
;i ;"0s;
i±;"if;	@
;
i±;&{ ;"append;	@
;
i±;&{ o;;"webkit-value;[ ;0;	@
;
i³;o;%
;![o;"	;"webkit-value;#"webkit_value;	@
;
i³o;%
;![o;	;;1;	@
;[o;%
;![o;	;;;	@
;"-webkit;
i³o;"	;"property;#"property;	@
;
i³;"prefixed-for-transition;	@
;
i³;&{ o;"	;"duration;#"duration;	@
;
i³o;"	;"timing-function;#"timing_function;	@
;
i³;
i³;"compact;	@
;
i³;&{ ;"append;	@
;
i³;&{ o;;"moz-value;[ ;0;	@
;
i´;o;%
;![o;"	;"moz-value;#"moz_value;	@
;
i´o;%
;![o;	;;1;	@
;[	o;%
;![o;	;;;	@
;"	-moz;
i´o;"	;"property;#"property;	@
;
i´;"prefixed-for-transition;	@
;
i´;&{ o;"	;"duration;#"duration;	@
;
i´o;"	;"timing-function;#"timing_function;	@
;
i´o;"	;"
delay;#"
delay;	@
;
i´;
i´;"compact;	@
;
i´;&{ ;"append;	@
;
i´;&{ o;;"o-value;[ ;0;	@
;
iµ;o;%
;![o;"	;"o-value;#"o_value;	@
;
iµo;%
;![o;	;;1;	@
;[	o;%
;![o;	;;;	@
;"-o;
iµo;"	;"property;#"property;	@
;
iµ;"prefixed-for-transition;	@
;
iµ;&{ o;"	;"duration;#"duration;	@
;
iµo;"	;"timing-function;#"timing_function;	@
;
iµo;"	;"
delay;#"
delay;	@
;
iµ;
iµ;"compact;	@
;
iµ;&{ ;"append;	@
;
iµ;&{ :
@listo;"	;"transitions;#"transitions;	@
;
i¢;	@
;
i¢;+Tu;$é[o:Sass::Script::Variable	:
@name"$experimental-support-for-webkit:@underscored_name"$experimental_support_for_webkit:@options{ :
@linei¸0[o:Sass::Tree::PropNode;["-webkit-transition:@children[ :@prop_syntax:new:
@tabsi ;@	:@valueo; 	;"webkit-value;"webkit_value;@	;	i¸;	i¸o:Sass::Tree::CommentNode:
@loud0;[ ;@	;"j/* old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it. */:@silenti ;	i¹:@lines[ u:Sass::Tree::IfNodeú[o:Sass::Script::Variable	:
@name"has-delays:@underscored_name"has_delays:@options{ :
@lineiº0[o:Sass::Tree::PropNode;["-webkit-transition-delay:@children[ :@prop_syntax:new:
@tabsi ;@	:@valueo; 	;"delays;"delays;@	;	iº;	iºu;$#[o:Sass::Script::Variable	:
@name"%experimental-support-for-mozilla:@underscored_name"%experimental_support_for_mozilla:@options{ :
@linei»0[o:Sass::Tree::PropNode;["-moz-transition:@children[ :@prop_syntax:new:
@tabsi ;@	:@valueo; 	;"moz-value;"moz_value;@	;	i»;	i»u;$[o:Sass::Script::Variable	:
@name"#experimental-support-for-opera:@underscored_name"#experimental_support_for_opera:@options{ :
@linei¼0[o:Sass::Tree::PropNode;["-o-transition:@children[ :@prop_syntax:new:
@tabsi ;@	:@valueo; 	;"o-value;"o_value;@	;	i¼;	i¼o;';["transition;[ ;(;);*i ;	@
;o;"	;"transitions;#"transitions;	@
;
i½;
i½;	@
;
i;+To;;0;[ ;	@
;"Y/* coerce a list to be comma delimited or make a new, empty comma delimited list. */;i ;
iÀ;[ o:Sass::Tree::FunctionNode;![[o;";"	list;#"	list;	@
o;	;;1;	@
;[ ;
iÁ;"comma-list;[o:Sass::Tree::ReturnNode	;[ ;	@
;
iÂ;o;%
;![o;	;;1;	@
;[ ;
iÂo;"	;"	list;#"	list;	@
;
iÂo;	;;;	@
;"
comma;
iÂ;"	join;	@
;
iÂ;&{ ;	@
;
iÁ;+To;;0;[ ;	@
;"i/* Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`. */;i ;
iÅ;[ o;5;![[o;";"prefix;#"prefix;	@
0[o;";"property;#"property;	@
0;"prefixed-for-transition;[u;$[o:Sass::Script::Operation
:@options{ :
@lineiÇ:@operand2o:Sass::Script::String	:
@type:identifier;@:@value"	list;iÇ:@operator:eq:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:
@name"property:@underscored_name"property;@;iÇ;"type-of;@;iÇ:@keywords{ u:Sass::Tree::IfNodeP[00[u:Sass::Tree::IfNode0[o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:
@name"#transitionable-prefixed-values:@underscored_name"#transitionable_prefixed_values:@options{ :
@lineiÎo;	;"property;	"property;
@;iÎ;"
index;
@;iÎ:@keywords{ u:Sass::Tree::IfNode[00[o:Sass::Tree::ReturnNode	:@children[ :@options{ :
@lineiÑ:
@expro:Sass::Script::Variable	:
@name"property:@underscored_name"property;@	;iÑ[o:Sass::Tree::ReturnNode	:@children[ ;
@;iÏ:
@expro: Sass::Script::Interpolation:@aftero;;0:@originally_textF:	@mido;	;"property;	"property;
@;iÏ:@whitespace_after0;
@:@beforeo;;0;:originally_text;o:Sass::Script::String	:
@type:identifier;
@:@value"-;iÏ;F;
@;0;iÏ:@whitespace_before0;iÏ;0;F;o;	;"prefix;	"prefix;
@;iÏ;0;
@;0;iÏ;i[o:Sass::Tree::VariableNode;"new-list:@children[ :@guarded0;@;iÈ:
@expro;
;[ ;"comma-list;@;iÈ;{ o:Sass::Tree::EachNode:	@var"v;[o;;"new-list;[ ;0;@;iÊ;o;
;[o;	;"new-list;"new_list;@;iÊo;
;[o;	;"prefix;"prefix;@;iÊo;	;"v;"v;@;iÊ;"prefixed-for-transition;@;iÊ;{ ;"append;@;iÊ;{ :
@listo;	;"property;"property;@;iÉ;@;iÉ:@has_childrenTo:Sass::Tree::ReturnNode	;[ ;@;iÌ;o;	;"new-list;"new_list;@;iÌ;	@
;
iÆ;+To;;0;[ ;	@
;"7/* Checks if the value given is a unit of time. */;i ;
iÖ;[ o;5;![[o;";"
value;#"
value;	@
0;"is-time;[u;$ù[o:Sass::Script::Operation
:@options{ :
@lineiØ:@operand2o:Sass::Script::String	:
@type:identifier;@:@value"number;iØ:@operator:eq:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:
@name"
value:@underscored_name"
value;@;iØ;"type-of;@;iØ:@keywords{ u:Sass::Tree::IfNodey[00[o:Sass::Tree::ReturnNode	:@children[ :@options{ :
@lineiÛ:
@expro:Sass::Script::Bool;@	:@valueF;iÛ[o:Sass::Tree::ReturnNode	:@children[ ;@;iÙ:
@expro:!Sass::Script::UnaryOperation	;@;iÙ;:not:@operando;	;@;iÙ;;;o;
;[o:Sass::Script::List	:@separator:
space;@;[o;		;
;;@;"s;iÙo;		;
;;@;"ms;iÙ;iÙo;
;[o;	;"
value;"
value;@;iÙ;"	unit;@;iÙ;{ ;"
index;@;iÙ;{ ;	@
;
i×;+T;	@
;
i;+T