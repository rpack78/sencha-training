/*
 * File: app/controller/Main.js
 *
 * This file was generated by Sencha Architect version 3.0.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Umbrella.controller.Main', {
    extend: 'Ext.app.Controller',

    requires: [
        'Umbrella.util.Geocode',
        'Umbrella.util.Rainy'
    ],

    config: {
        rainy: null,
        latLng: null,

        refs: {
            umbrella: 'umbrella',
            location: 'location'
        },

        control: {
            "formpanel": {
                rainychange: 'onFormpanelRainyChange'
            }
        }
    },

    onFormpanelRainyChange: function(location,rainy, eventOptions) {
        this.setRainy(rainy);
    },

    updateRainy: function(rainy) {
        this.getUmbrella().setRainy(rainy);
        this.getLocation().setRainy(rainy);
    },

    updateLatLng: function(latLng) {
        var me = this;
        Umbrella.util.Rainy.check(latLng, function(rainy){
          me.setRainy(rainy);
        });

    },

    init: function(application) {
        var me = this;

        // If it's not raining in your location use a hard-coded city where it is raining.
        Umbrella.util.Geocode.calculateLatLng('San Juan Chamelco, Guatemala', function(latLng){
            me.setLatLng(latLng);
        });

    },

    applyLatLng: function(latLng) {
        // Only use the latLng if it's non-null, and if it's changing
        if (latLng && !latLng.equals(this.getLatLng())){
            return latLng;
        }

    }

});